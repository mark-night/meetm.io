@use '../../../scss/global/var' as v;
@use '../../../scss/global/mixin' as m;

.carousel-nav {
    $nav-size: 4em;
    $btn-size: $nav-size * 0.4;

    position: absolute;
    background-color: v.$color-black;
    opacity: 0.8;
    // matching prism-bleed-h
    top: calc(5 * var(--vh));
    bottom: calc(5 * var(--vh));
    // matching prism-bleed-w + scene's padding
    right: calc(2rem + 1rem);
    width: #{$nav-size};
    padding: #{$btn-size} #{($nav-size - $btn-size) / 2};
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;

    @include m.portrait-prism {
        top: unset;
        bottom: 0;
        // matching prism-bleed-w + scene's padding
        right: calc(5 * var(--vw) + 1rem);
        left: calc(5 * var(--vw) + 1rem);
        width: unset;
        height: #{$nav-size};
        padding: #{($nav-size - $btn-size) / 2} #{$btn-size};
        flex-direction: row;
    }

    &__progress {
        position: absolute;
        width: 100%;
        height: calc(var(--progress) * 100%);
        left: 0;
        bottom: 0;
        background-color: v.$color-base;
        opacity: 0.5;

        @include m.portrait-prism {
            height: 100%;
            width: calc(var(--progress) * 100%);
        }
    }

    &__btn {
        flex: 0 0 #{$btn-size * 1.5};
        position: relative;

        & .btn {
            position: absolute;
            cursor: pointer;
            width: #{$btn-size};
            height: #{$btn-size};

            &::before {
                content: '';
                display: block;
                position: absolute;
                width: 70%;
                height: 70%;
                border-left: 1px solid v.$color-base;
                border-top: 1px solid v.$color-base;
                transform-origin: left top;
                left: 50%;
                top: 15%;
                transform: rotate(45deg);
            }

            &.prev {
                top: 0;

                @include m.portrait-prism {
                    top: unset;
                    left: 0;
                    transform: rotate(-90deg);
                }
            }

            &.next {
                bottom: 0;
                transform: rotate(180deg);

                @include m.portrait-prism {
                    bottom: unset;
                    right: 0;
                    transform: rotate(90deg);
                }
            }

            &:hover {
                &::before {
                    border-left-width: 3px;
                    border-top-width: 3px;
                }
            }
        }
    }

    &__switch {
        flex: 0 0 #{$btn-size * 1.5};
        position: relative;

        & .switch {
            $switch-size: $btn-size * 0.85;

            position: absolute;
            cursor: pointer;
            width: #{$switch-size};
            height: #{$switch-size};
            left: #{($btn-size - $switch-size) / 2};
            bottom: 0;

            @include m.portrait-prism {
                left: unset;
                top: #{($btn-size - $switch-size) / 2};
                bottom: unset;
                right: 0;
            }

            &::before {
                content: '';
                display: block;
                position: absolute;
                left: 50%;
                transform: translateX(-50%);
            }

            &.manual {
                &::before {
                    width: 0;
                    height: 0;
                    border-top: ($switch-size / 2) solid transparent;
                    border-bottom: ($switch-size / 2) solid transparent;
                    border-right: ($switch-size / 2 * 1.732) solid v.$color-base;
                    transform: translateX(-38%) rotate(-180deg);
                    transition: transform v.$tran-dur-fast;
                }
            }

            &.auto {
                &::before {
                    width: ($switch-size / 5);
                    height: $switch-size;
                    border-left: ($switch-size / 5) solid v.$color-base;
                    border-right: ($switch-size / 5) solid v.$color-base;
                    transition: transform v.$tran-dur-fast;
                }
            }

            & .progress-ring {
                $ring-size: $switch-size * 1.8;

                width: $ring-size;
                height: $ring-size;
                position: absolute;
                left: 50%;
                top: 50%;
                transform: translateX(-50%) translateY(-50%) rotate(-90deg);

                &__circle {
                    $stroke-thickness: 1em / 16; // 1px
                    $ring-radius: $ring-size / 2 - $stroke-thickness;
                    $ring-length: 2 * 3.14 * $ring-radius;

                    stroke: v.$color-base;
                    stroke-width: 1px;
                    fill: transparent;
                    r: $ring-radius;
                    cx: $ring-size / 2;
                    cy: $ring-size / 2;
                    // make dasharray[1] (the gap) long enough to cover full circumference
                    stroke-dasharray: calc(
                            #{$ring-length} * var(--ring-progress)
                        )
                        #{$ring-length * 1.5};
                    stroke-dashoffset: 1px; // fix for safari
                }
            }
        }
    }

    &__dot {
        flex: 1;
        position: relative;
        width: 100%;
        height: 100%;

        &::before {
            content: '';
            display: block;
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translateX(-50%) translateY(-50%);
            width: 1px;
            height: 80%;
            max-height: 3rem;
            background-color: v.$color-dark;

            @include m.portrait-prism {
                width: 60%;
                max-width: 3rem;
                height: 1px;
            }
        }
        &--current::before {
            width: 2px;
            background-color: v.$color-base;

            @include m.portrait-prism {
                width: 60%;
                max-width: 3rem;
                height: 2px;
            }
        }
    }
}
